# API Gateway Service Dockerfile
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY nx.json ./
COPY tsconfig.base.json ./

# Install dependencies
RUN npm install

# Copy source code
COPY . .

# Build the API Gateway
RUN npx nx build api-gateway --prod

# Production stage
FROM node:18-alpine AS runtime

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nestjs -u 1001

WORKDIR /app

# Copy package files and install production dependencies
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# Copy built application
COPY --from=builder --chown=nestjs:nodejs /app/dist/apps/api-gateway ./
COPY --from=builder --chown=nestjs:nodejs /app/node_modules ./node_modules

# Create healthcheck script
RUN echo '#!/bin/sh\ncurl -f http://localhost:3000/api/health || exit 1' > healthcheck.sh && \
    chmod +x healthcheck.sh

USER nestjs

# API Gateway runs on port 3000
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD ./healthcheck.sh

# Start the service
CMD ["node", "main.js"]
